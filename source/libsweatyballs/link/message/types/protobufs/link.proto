syntax="proto3";

//LinkMessage
//
//This represents a message sent between two nodes directly
message LinkMessage
{
    LinkMessageType type = 1;
    bytes payload = 2;

    //TODO: Use these
    string publicKey = 3;
    string signature = 4;
    string neighborPort = 5;
}

enum LinkMessageType
{
    ADVERTISEMENT = 0;
    PACKET = 1;
    SESSION = 2;
}


//Advertisement
//
//Advertisement of a router
message Advertisement
{
    repeated RouteEntry routes = 2;
}


message RouteEntry
{
    // Address this is a route to
    string address = 1;
    uint32 metric = 2;

    //Add perhaps siganture?
}

//Packet
//
//Represents a general packet to be sent
message Packet
{
    string fromKey = 1;
    string toKey = 2;
    string siganture = 3;
    bytes payload = 4;
    uint64 ttl = 5;
}


//PacketPayload
//
//Represents what is encoded into
//the `payload` field of Packet
message PacketPayload
{
    PacketPayloadType type = 1;
    bytes payload = 2;
}

enum PacketPayloadType
{
    SESSION_CONTROL = 0;
}

message SessionCTLMessage
{
    SessionCTLType type = 1;
    uint32 sessionCTRLID = 2;
}

enum SessionCTLType
{
    SESSION_CREATE = 0;
    SESSION_CTL_ACK = 1;
    SESSION_DESTROY = 2;
    SESSION_SETNEWKEY = 3;
}


//Actual Session packet (NOT a CTL)
message SessionMessage
{
    bytes payload = 1;
}